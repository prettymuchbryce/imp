var Imp=function(){var a={},b=!1;this.setProductionMode=function(){b=!0},this.lements=function(a,d){setTimeout(function(){c(a,d,!b)},1)},this.define=function(b,c){var d=new Imp.Interface(b);a[b]=d,c.method=function(){for(var a=[],b=0;b<arguments.length;b++)a.push(arguments[b]);return d.addMethod(a.shift(),a)}},this.doesImplement=function(a,b){return c(a,b)};var c=function(b,c,d){if(!a.hasOwnProperty(b)){if(d)throw"No interface exists by the name of "+b+".";return!1}var e=a[b],f=e.methods,g=[];for(var h in f)g.push(h);for(var h in c)if(e.methods[h]){if(paramNames=Imp.utils.getParamNames(c[h]),!Imp.utils.compareArrays(e.methods[h].arguments,paramNames)){if(d)throw"Incompatible method signature for method "+h+" on interface "+b+".";return!1}for(var i=0;i<g.length;i++)g[i]===h&&g.splice(i,1)}if(g.length>0)for(var i=0;i<g.length;i++){if(d)throw"Method "+g[i]+" must be defined in order to implement interface "+b+".";return!1}return!0};return this}();Imp.Interface=function(a){this.name=a,this.methods={};var b=function(a){this.arguments=[],this.name=a,this.params=function(){this.arguments=arguments}};this.addMethod=function(a){var c=new b(a);if(this.methods[a])throw"Duplicate method definition of "+a+" in "+this.name;return this.methods[a]=c,c}},Imp.utils=function(){return this.getParamNames=function(a){var b=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,c=a.toString().replace(b,""),d=c.slice(c.indexOf("(")+1,c.indexOf(")")).match(/([^\s,]+)/g);return null===d&&(d=[]),d},this.compareArrays=function(a,b){if(!b)return!1;if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]instanceof Array&&b[c]instanceof Array){if(!a[c].compare(b[c]))return!1}else if(a[c]!=b[c])return!1;return!0},this}();